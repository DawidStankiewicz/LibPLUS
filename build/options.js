!function(e){function o(o){for(var t,i,s=o[0],u=o[1],a=o[2],f=0,c=[];f<s.length;f++)i=s[f],n[i]&&c.push(n[i][0]),n[i]=0;for(t in u)Object.prototype.hasOwnProperty.call(u,t)&&(e[t]=u[t]);for(p&&p(o);c.length;)c.shift()();return l.push.apply(l,a||[]),r()}function r(){for(var e,o=0;o<l.length;o++){for(var r=l[o],t=!0,s=1;s<r.length;s++){var u=r[s];0!==n[u]&&(t=!1)}t&&(l.splice(o--,1),e=i(i.s=r[0]))}return e}var t={},n={2:0},l=[];function i(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=e,i.c=t,i.d=function(e,o,r){i.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,o){if(1&o&&(e=i(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var t in e)i.d(r,t,function(o){return e[o]}.bind(null,t));return r},i.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(o,"a",o),o},i.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},i.p="";var s=window.webpackJsonp=window.webpackJsonp||[],u=s.push.bind(s);s.push=o,s=s.slice();for(var a=0;a<s.length;a++)o(s[a]);var p=u;l.push([53,0]),r()}({53:function(e,o,r){(function(o){const t=r(3),n=r(5),l=r(2);let i;options={onload(){console.log("options loaded"),o("#debug-file-button").click(options.handleDebugFile)},handleDebugFile(){if(console.log("handle debug file"),!(window.File&&window.FileReader&&window.FileList&&window.Blob))return console.log("The File APIs are not fully supported in this browser."),void alert("The File APIs are not fully supported in this browser.");let e=o("#debug-file-input");if(e)if(e.prop("files"))if(e.prop("files")[0]){let o=e.prop("files")[0];console.log("file,",o),(i=new FileReader).onload=options.recivedText,i.readAsText(o)}else alert("Please select a file before clicking 'Load'");else alert("This browser doesn't seem to support the `files` property of file inputs.");else alert("Um, couldn't find the fileinput element.")},recivedText(){i.error&&console.error("errors:",i.error),console.log(i.result);const e=i.result,o=t.getData(e);n.init(e);const r=n.parseAll(o.grades),s=l.calcGradePointAverage(r);console.log(`grades: ${r.length}, gpa: ${s}`),console.log(r)}},window.onload=options.onload,e.exports=options}).call(this,r(1))}});