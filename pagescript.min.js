/**
 * LibPLUS
 * Author: Dawid Stankiewicz
 * theszczypiorek[ at ]gmail.com
 * github.com/DawidStankiewicz
 *
 */

window.onload=function(){init()};function Grade(){this.id,this.type,this.rawData,this.rawVal,this.val,this.subject,this.category,this.date,this.weight,this.teacher,this.addedBy,this.semester}function Subject(){this.id,this.name,this.avg,this.firstSemesterAvg,this.secondSemesterAvg}function User(){this.name,this.grades,this.subjects}let user=new User;function getUserWithData(){let a=new User;return a.name=findUserName(),a.grades=findAllGrades(),a.subjects=getAllSubjects(a.grades),a}function findUserName(){return $("b:contains(\"Ucze\u0144:\")").parent().text().replace("Ucze\u0144: ","").replace("Klasa:","")}function init(){isAllGradeMode()?console.log("Jeste\u015B w trybie \"wszystkie oceny\""):console.log("Jeste\u015B w trybie \"oceny od ostatniego logowania\". Przejd\u017A do trybu \"wszystkie oceny\" aby LibPLUS dzia\u0142a\u0142 prawid\u0142owo!"),user=getUserWithData(),createContainers(),calculateAndDisplayAvg(),setNumberOfGradesOnPage(countGrades()),createButtons()}function createContainers(){createLibPLUSContainer(),$("#"+LIBPLUS_ID).append(STUDENT_AVG_CONTAINER),$("#"+LIBPLUS_ID).append(STUDENT_AVG_END_FIRST_CONTAINER),$("#"+LIBPLUS_ID).append(STUDENT_AVG_PROPOSED_SECOND_CONTAINER),$("#"+LIBPLUS_ID).append(STUDENT_AVG_END_SECOND_CONTAINER),$("#"+LIBPLUS_ID).append(STUDENT_GRADE_COUNTER_CONTAINER),createContainersOfSubjects(),createFormForUserAvgOfDateRage(),createContainerForUserAvgOfDateRage()}function createLibPLUSContainer(){$(".container-icon").after("<div id="+LIBPLUS_ID+" class=\"container\"></div>")}function createContainersOfSubjects(){user.subjects.forEach(function(a){let b=8,c=10;$("#przedmioty_"+a.id).prev().children("td:nth-child(4)").after().html(" "),$("#przedmioty_"+a.id).prev().children("td:nth-child(4)").after().append("<span title=\"\u015Arednia wy\u015Bwietlona dzi\u0119ki rozszerzeniu LibPLUS.\" id=\""+FIRST_SEMESTER_AVG_OF_SUBJECT_CONTAINER_ID+a.id+"\"></span>"),$("#przedmioty_"+a.id).prev().children("td:nth-child("+b+")").after().html(" "),$("#przedmioty_"+a.id).prev().children("td:nth-child("+b+")").after().append("<span title=\"\u015Arednia wy\u015Bwietlona dzi\u0119ki rozszerzeniu LibPLUS.\" id=\""+SECOND_SEMESTER_AVG_OF_SUBJECT_CONTAINER_ID+a.id+"\"></span>"),$("#przedmioty_"+a.id).prev().children("td:nth-child("+c+")").after().html(" "),$("#przedmioty_"+a.id).prev().children("td:nth-child("+c+")").after().append("<span title=\"\u015Arednia wy\u015Bwietlona dzi\u0119ki rozszerzeniu LibPLUS.\" id=\""+AVG_OF_SUBJECT_CONTAINER_ID+a.id+"\"></span>")})}function createContainerForUserAvgOfDateRage(){$("#"+LIBPLUS_ID).append(STUDENT_AVG_DATE_RAGE_CONTAINER)}function setAvgValueOfUserOnPage(a){$("#"+STUDENT_AVG_CONTAINER_ID).text(a)}function setNumberOfGradesOnPage(a){$("#"+STUDENT_GRADE_COUNTER_CONTAINER_ID).text(a)}function setAvgValueOfSubjectOnPage(a){a.forEach(function(a){$("#"+AVG_OF_SUBJECT_CONTAINER_ID+a.id).text(roundDecimalPlaces(a.avg))})}function setFirstSemesterAvgValueOfSubjectOnPage(a){a.forEach(function(a){isNaN(a.firstSemesterAvg)?$("#"+SECOND_SEMESTER_AVG_OF_SUBJECT_CONTAINER_ID+a.id).text("-"):$("#"+FIRST_SEMESTER_AVG_OF_SUBJECT_CONTAINER_ID+a.id).text(roundDecimalPlaces(a.firstSemesterAvg))})}function setSecondSemesterAvgValueOfSubjectOnPage(a){a.forEach(function(a){isNaN(a.secondSemesterAvg)?$("#"+SECOND_SEMESTER_AVG_OF_SUBJECT_CONTAINER_ID+a.id).text("-"):$("#"+SECOND_SEMESTER_AVG_OF_SUBJECT_CONTAINER_ID+a.id).text(roundDecimalPlaces(a.secondSemesterAvg))})}function setAvgValueOfEndFirstPeriodOnPage(a){$("#"+STUDENT_AVG_END_FIRST_CONTAINER_ID).text(a)}function setAvgValueOfEndSecondPeriodOnPage(a){$("#"+STUDENT_AVG_END_SECOND_CONTAINER_ID).text(a)}function setAvgValueOfProposedSecondPeriodOnPage(a){$("#"+STUDENT_AVG_PROPOSED_SECOND_CONTAINER_ID).text(a)}function setAvgValueOfDateRangeOnPage(a){$("#"+STUDENT_AVG_DATE_RAGE_CONTAINER_ID).text(roundDecimalPlaces(a))}function displayGradesAndAvg(a){hideAllGrades(),a.forEach(function(a){showGradeOnPage(a.id),0!=a.weight&&showSubjectAvgContainer(getGradeSubject(a.id))})}function hideAllGrades(){user.grades.forEach(function(a){hideGradeOnPage(a.id),hideSubjectAvgContainer(getGradeSubject(a.id))})}function hideGradeOnPage(a){$(GRADE_ID+a).hide()}function showGradeOnPage(a){$(GRADE_ID+a).show()}function hideSubjectAvgContainer(a){$("#avgSubject_"+a.id).hide()}function showSubjectAvgContainer(a){$("#avgSubject_"+a.id).show()}function calculateAndDisplayAvg(){setAvgValueOfUserOnPage(roundDecimalPlaces(getCalculatedAvg(user.grades))),setFirstSemesterAvgValueOfSubjectOnPage(user.subjects),setSecondSemesterAvgValueOfSubjectOnPage(user.subjects),setAvgValueOfSubjectOnPage(user.subjects),setAvgValueOfEndFirstPeriodOnPage(roundDecimalPlaces(getCalculatedAvg(getGradesOfType(GRADE_END_FIRST,user.grades)))),setAvgValueOfProposedSecondPeriodOnPage(roundDecimalPlaces(getCalculatedAvg(getGradesOfType(GRADE_PROPOSED_SECOND,user.grades)))),setAvgValueOfEndSecondPeriodOnPage(roundDecimalPlaces(getCalculatedAvg(getGradesOfType(GRADE_END_SECOND,user.grades))))}function getCalculatedAvg(a){let b=0,c=0,d=0,e=0;return a.forEach(function(a){let b=+a.val,f=+a.weight;0!=f&&(d+=b*f,e+=f,c++,DEBUG_AVG_CALCULATE&&(console.log("id: "+a.id),console.log("type : "+a.type),console.log("grade val: "+b),console.log("subject: "+a.subject),console.log("semester:  "+a.semester),console.log("weight: "+f),console.log("counter:  "+c),console.log("avg: "+d/e),console.log("\n\n\n")))}),0!==e&&(b=d/e),b}function getAvgOfSubject(a,b){let c=[],d=0;return b.forEach(function(b){0===a.localeCompare(b.subject)&&(c[d]=b,d++)}),getCalculatedAvg(c)}function getAvgOfSubjectOfSemester(a,b,c){let d=[],e=0;return c.forEach(function(c){0===a.localeCompare(c.subject)&&c.semester===b&&(d[e]=c,e++)}),getCalculatedAvg(d)}function getGradesOfType(a,b){let c=[],d=0;return b.forEach(function(b){if(a===b.type){let a=jQuery.extend({},b);a.weight=1,c[d]=a,d++}}),c}function findAllGrades(){let a,b=1,c=[],d=1;for(;isGradeExist(b);){let e=new Grade;e.id=b,e.type=getGradeType(e.id),e.rawData=getGradeRawData(b),e.rawVal=getGradeRawValue(b),e.val=getGradeValueFromRawValue(e.rawVal),e.subject=getGradeSubject(e.id),e.category=getGradeCategoryFromRawData(e.rawData),e.date=getGradeDateFromRawData(e.rawData),e.weight=getGradeWeightFromRawData(e.rawData),e.teacher=getGradeTeacherFromRawData(e.rawData),e.addedBy=getGradeAddedByFromRawData(e.rawData),(a===void 0||a!==e.subject)&&(a=e.subject,d=1),e.semester=d,e.category===CATEGORY_END_FISRT&&(d=2),c[b-1]=e,DEBUG_GRADES&&(console.debug("id: "+c[b-1].id),console.debug("type: "+c[b-1].type),console.debug("raw data: "+c[b-1].rawData),console.debug("raw val: "+c[b-1].rawVal),console.debug("val: "+c[b-1].val),console.debug("subject: "+c[b-1].subject),console.debug("category: "+c[b-1].category),console.debug("date: "+c[b-1].date),console.debug("weight: "+c[b-1].weight),console.debug("teacher: "+c[b-1].teacher),console.debug("added by: "+c[b-1].addedBy),console.debug("semester: "+c[b-1].semester),console.debug("\n\n")),b++}return c}function countGrades(){let a=0,b=1,c=!0;do isGradeExist(b)?(a++,b++):c=!1;while(c);return a}function isGradeExist(a){return null!=$(GRADE_ID+a).html()}function getGradeRawData(a){return $(GRADE_ID+a).children("a").attr(TITLE_ATTRIBUTE).replace(/<br>/g,";").replace(/: /g,":").replace(/<br\/>/g,";")}function getGradeRawValue(a){return $(GRADE_ID+a).children("a").html()}function getGradeType(a){let b=GRADE_NORMAL;return isGradeProposedFromFirstPeriod(a)?b=GRADE_PROPOSED_FIRST:isGradeProposedFromSecondPeriod(a)?b=GRADE_PROPOSED_SECOND:isGradeEndFirst(a)?b=GRADE_END_FIRST:isGradeEndSecond(a)?b=GRADE_END_SECOND:isPlus(getGradeRawValue(a))?b=GRADE_PLUS:isMinus(getGradeRawValue(a))?b=GRADE_MINUS:isGradeUnprepared(a)&&(b=GRADE_UNPREPARED),b}function getGradeValueFromRawValue(a){let b=0;return null!==a&&null!=a&&!isPlusOrMinus(a)&&isNumberWithPlusOrMinus(a)&&(b=getConvertedNumberFromRawGradeValue(a)),b}function getGradeSubject(a){let b=$(GRADE_ID+a).parent().parent().children("td:eq(1)").html();return void 0===b&&(b=$(GRADE_ID+a).parent().parent().parent().children("td:eq(1)").html()),b}function getGradeCategoryFromRawData(a){return a.substr(a.indexOf("Kategoria:")+10,100).split(";")[0]}function getGradeDateFromRawData(a){return a.substr(a.indexOf("Data:")+5,10).split(";")[0]}function getGradeTeacherFromRawData(a){return a.substr(a.indexOf("Nauczyciel:")+11,50).split(";")[0]}function getGradeAddedByFromRawData(a){return a.substr(a.indexOf("Doda\u0142:")+6,50).split(";")[0]}function getConvertedNumberFromRawGradeValue(a){return hasPlusOrMinus(a)&&(-1==a.search(/\+/g)?-1!=a.search("-")&&(a=+a.replace("-",""),a-=.25):(a=+a.replace(/\+/g,""),a+=.5)),a}function getGradeWeightFromRawData(a){return isWeightExist(a)?getGradeWeightSubstring(a):0}function getGradeWeightSubstring(a){return a.substr(a.indexOf("Waga:")+5,4).split(";")[0]}function isWeightExist(a){return-1!==a.indexOf("Waga:")}function isNumberWithPlusOrMinus(a){return hasPlusOrMinus(a)&&(a=a.replace(/\+/g,""),a=a.replace("-","")),!isNaN(a)}function isPlusOrMinus(a){return hasPlusOrMinus(a)&&1==a.length}function isPlus(a){return-1!=a.search(/\+/g)&&1==a.length}function isMinus(a){return-1!=a.search("-")&&1==a.length}function hasPlusOrMinus(a){return-1!=a.search(/\+/g)||-1!=a.search("-")}function isGradeProposedFromFirstPeriod(a){return-1!==$(GRADE_ID+a).children("a").attr(TITLE_ATTRIBUTE).indexOf(CATEGORY_PROPOSED_FISRT)}function isGradeProposedFromSecondPeriod(a){return-1!==$(GRADE_ID+a).children("a").attr(TITLE_ATTRIBUTE).indexOf(CATEGORY_PROPOSED_SECOND)}function isGradeEndFirst(a){return-1!==$(GRADE_ID+a).children("a").attr(TITLE_ATTRIBUTE).indexOf(CATEGORY_END_FISRT)}function isGradeEndSecond(a){return-1!==$(GRADE_ID+a).children("a").attr(TITLE_ATTRIBUTE).indexOf(CATEGORY_END_SECOND)}function isGradeUnprepared(a){return-1!==$(GRADE_ID+a).children("a").html().indexOf("np")}function getAllSubjects(a){let b=[],c=0;return a.forEach(function(d){if(0==c||0!==b[c-1].name.localeCompare(d.subject)){let e=new Subject;e.id=getIdOfSubjectOfGrade(d.id),e.name=d.subject,e.avg=getAvgOfSubject(e.name,a),e.firstSemesterAvg=getAvgOfSubjectOfSemester(e.name,1,a),e.secondSemesterAvg=getAvgOfSubjectOfSemester(e.name,2,a),b[c]=e,c++}}),b}function getIdOfSubjectOfGrade(a){let b=$(GRADE_ID+a).parent().parent().next().attr("id");return void 0===b&&(b=$(GRADE_ID+a).parent().parent().parent().next().attr("id")),b.split("_")[1]}function getGradesByDateRange(a,b){let c=[],d=0;return user.grades.forEach(function(e){isDateInSelectedRange(e.date,a,b)&&(c[d]=e,d++)}),c}function showDataFromSelectedRange(){let a=$("#dateRageStart").val(),b=$("#dateRageEnd").val(),c=getGradesByDateRange(a,b),d=getCalculatedAvg(c),e=getAllSubjects(c);displayGradesAndAvg(c),setAvgValueOfDateRangeOnPage(d),setAvgValueOfSubjectOnPage(e)}function createFormForUserAvgOfDateRage(){$("#"+LIBPLUS_ID).append(STUDENT_AVG_DATE_RAGE_FROM);let a=getDate(),b=getSchoolYearStartDate();$("#dateRageStart").val(b),$("#dateRageEnd").val(a),$("#showDataFromRange").click(function(){showDataFromSelectedRange()})}function isDateInSelectedRange(a,b,c){return(0===a.localeCompare(b)||1===a.localeCompare(b))&&(-1===a.localeCompare(c)||0===a.localeCompare(c))}function createButtons(){addUpdateButtonOnPage()}function addUpdateButtonOnPage(){$(".inside").after("<div id=\"updateButton\"><span class=\"fold\"><a href=\"#\" class=\"fold-link\"><span class=\"fold-start\">Aktualizuj</span><span class=\"fold-end\"></span></a></span></div>"),$("#updateButton").click(function(){updateAll()})}function updateAll(){user=getUserWithData(),calculateAndDisplayAvg(),console.log("updated")}function roundDecimalPlaces(a){return a.toFixed(DISPLAY_PRECISION_FLOAT_NUMBER)}function isAllGradeMode(){return 0===$("#zmiany_logowanie_wszystkie").length}function getDate(a){a===void 0&&(a=new Date);let b=a.getFullYear(),c=10>a.getMonth()+1?"0"+(a.getMonth()+1):a.getMonth()+1,d=10>a.getDate()?"0"+a.getDate():a.getDate();return b+"-"+c+"-"+d}function getSchoolYearStartDate(){let a=new Date;return 9>a.getMonth()+1?getDate(new Date(a.getFullYear()-1+"-09-01")):getDate(new Date(a.getFullYear()+"-09-01"))}